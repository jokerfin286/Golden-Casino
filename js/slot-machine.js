document.addEventListener('DOMContentLoaded', function() {
    // –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    const reels = [
        document.getElementById('reel1'),
        document.getElementById('reel2'),
        document.getElementById('reel3')
    ];
    const spinButton = document.getElementById('spinButton');
    const lever = document.getElementById('lever');
    const betAmountElement = document.getElementById('betAmount');
    const increaseBetButton = document.getElementById('increaseBet');
    const decreaseBetButton = document.getElementById('decreaseBet');
    const maxBetButton = document.getElementById('maxBet');
    const winMessageElement = document.getElementById('winMessage');
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã
    let betAmount = 10;
    let isSpinning = false;
    const maxBet = 100;
    const minBet = 1;
    
    // –°–∏–º–≤–æ–ª—ã –∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è
    const symbols = ['7Ô∏è‚É£', 'üçí', 'üçã', 'üçá', 'üîî'];
    const payouts = {
        '7Ô∏è‚É£': 100,
        'üçí': 50,
        'üçã': 25,
        'üçá': 15,
        'üîî': 10
    };
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞—Ä–∞–±–∞–Ω–æ–≤
    initReels();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    spinButton.addEventListener('click', startSpin);
    lever.addEventListener('click', function() {
        lever.classList.add('pulled');
        startSpin();
        setTimeout(() => {
            lever.classList.remove('pulled');
        }, 1000);
    });
    increaseBetButton.addEventListener('click', increaseBet);
    decreaseBetButton.addEventListener('click', decreaseBet);
    maxBetButton.addEventListener('click', setMaxBet);
    
    // –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞—Ä–∞–±–∞–Ω–æ–≤
    function initReels() {
        reels.forEach(reel => {
            // –û—á–∏—Å—Ç–∫–∞ –±–∞—Ä–∞–±–∞–Ω–∞
            reel.innerHTML = '';
            
            // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
            for (let i = 0; i < 5; i++) {
                const symbolDiv = document.createElement('div');
                symbolDiv.className = 'slot-symbol';
                symbolDiv.textContent = symbols[Math.floor(Math.random() * symbols.length)];
                reel.appendChild(symbolDiv);
            }
        });
    }
    
    // –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –≤—Ä–∞—â–µ–Ω–∏—è
    function startSpin() {
        if (isSpinning) return;
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
        const currentBalance = window.getBalance();
        if (currentBalance < betAmount) {
            showWinMessage('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!', false);
            return;
        }
        
        // –°–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞–≤–∫–∏
        window.updateBalance(-betAmount);
        
        isSpinning = true;
        spinButton.disabled = true;
        increaseBetButton.disabled = true;
        decreaseBetButton.disabled = true;
        maxBetButton.disabled = true;
        
        // –ê–Ω–∏–º–∞—Ü–∏—è —Ä—ã—á–∞–≥–∞
        lever.querySelector('.lever-handle').style.transform = 'rotate(30deg)';
        
        // –°–∫—Ä—ã—Ç–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≤—ã–∏–≥—Ä—ã—à–µ
        winMessageElement.classList.remove('show');
        winMessageElement.textContent = '';
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è –±–∞—Ä–∞–±–∞–Ω–æ–≤
        const spinDurations = [1500, 2000, 2500]; // –†–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–∞—Ä–∞–±–∞–Ω–∞
        const results = [];
        
        reels.forEach((reel, index) => {
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
            reel.classList.add('spinning');
            
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –Ω–∞–±–æ—Ä —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –≤—Ä–∞—â–µ–Ω–∏—è
            const spinSymbols = [];
            for (let i = 0; i < 20; i++) {
                spinSymbols.push(symbols[Math.floor(Math.random() * symbols.length)]);
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–∏–º–≤–æ–ª–∞ –±—É–¥—É—Ç –≤–∏–¥–Ω—ã)
            const result = symbols[Math.floor(Math.random() * symbols.length)];
            results.push(result);
            spinSymbols.push(result);
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è
            animateReel(reel, spinSymbols, spinDurations[index], index === 2);
            
            // –ó–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç –≤—Ä–∞—â–µ–Ω–∏—è
            playSpinSound();
        });
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –±–∞—Ä–∞–±–∞–Ω–æ–≤
        setTimeout(() => {
            checkResults(results);
            isSpinning = false;
            spinButton.disabled = false;
            increaseBetButton.disabled = false;
            decreaseBetButton.disabled = false;
            maxBetButton.disabled = false;
            lever.querySelector('.lever-handle').style.transform = '';
            
            // –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å –∞–Ω–∏–º–∞—Ü–∏–∏
            reels.forEach(reel => {
                reel.classList.remove('spinning');
            });
        }, spinDurations[2] + 500);
    }
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è –±–∞—Ä–∞–±–∞–Ω–∞
    function animateReel(reel, symbols, duration, isLastReel) {
        // –û—á–∏—Å—Ç–∫–∞ –±–∞—Ä–∞–±–∞–Ω–∞
        reel.innerHTML = '';
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        symbols.forEach(symbol => {
            const symbolDiv = document.createElement('div');
            symbolDiv.className = 'slot-symbol';
            symbolDiv.textContent = symbol;
            reel.appendChild(symbolDiv);
        });
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        reel.style.transition = 'none';
        reel.style.transform = 'translateY(0)';
        
        setTimeout(() => {
            reel.style.transition = `transform ${duration}ms cubic-bezier(0.1, 0.5, 0.5, 1)`;
            reel.style.transform = `translateY(calc(-100% + 150px))`;
        }, 50);
        
        // –ó–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–∞—Ä–∞–±–∞–Ω–∞
        setTimeout(() => {
            playStopSound();
            
            // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç —Ç—Ä—è—Å–∫–∏ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ
            reel.style.animation = 'shake 0.3s';
            setTimeout(() => {
                reel.style.animation = '';
            }, 300);
        }, duration);
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    function checkResults(results) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤—ã–∏–≥—Ä—ã—à (–≤—Å–µ —Å–∏–º–≤–æ–ª—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ)
        if (results[0] === results[1] && results[1] === results[2]) {
            const winAmount = betAmount * payouts[results[0]];
            window.updateBalance(winAmount);
            showWinMessage(`–í—ã–∏–≥—Ä—ã—à! +${winAmount}`, true);
            
            // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤—ã–∏–≥—Ä—ã—à–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
            highlightWinningSymbols();
            
            // –ó–≤—É–∫ –≤—ã–∏–≥—Ä—ã—à–∞
            playWinSound(winAmount);
        } else {
            showWinMessage('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!', false);
            playLoseSound();
        }
    }
    
    // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤—ã–∏–≥—Ä—ã—à–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
    function highlightWinningSymbols() {
        reels.forEach(reel => {
            const visibleSymbol = reel.querySelector('.slot-symbol');
            if (visibleSymbol) {
                visibleSymbol.classList.add('highlight');
                
                // –ê–Ω–∏–º–∞—Ü–∏—è –ø—É–ª—å—Å–∞—Ü–∏–∏
                visibleSymbol.style.animation = 'jackpot 0.5s ease infinite';
                
                // –£–¥–∞–ª–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
                setTimeout(() => {
                    visibleSymbol.classList.remove('highlight');
                    visibleSymbol.style.animation = '';
                }, 3000);
            }
        });
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≤—ã–∏–≥—Ä—ã—à–µ
    function showWinMessage(message, isWin) {
        winMessageElement.textContent = message;
        winMessageElement.classList.add('show');
        
        if (isWin) {
            winMessageElement.style.color = 'var(--win-color)';
            winMessageElement.style.textShadow = '0 0 10px rgba(255, 215, 0, 0.7)';
        } else {
            winMessageElement.style.color = 'var(--light-text)';
            winMessageElement.style.textShadow = 'none';
        }
    }
    
    // –§—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞–≤–∫–æ–π
    function increaseBet() {
        if (betAmount < maxBet) {
            betAmount += 5;
            updateBetDisplay();
            playButtonSound();
        }
    }
    
    function decreaseBet() {
        if (betAmount > minBet) {
            betAmount -= 5;
            updateBetDisplay();
            playButtonSound();
        }
    }
    
    function setMaxBet() {
        betAmount = maxBet;
        updateBetDisplay();
        playButtonSound();
    }
    
    function updateBetDisplay() {
        betAmountElement.textContent = betAmount;
        betAmountElement.classList.add('fade-in');
        setTimeout(() => {
            betAmountElement.classList.remove('fade-in');
        }, 500);
    }
    
    // –ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã (–∑–∞–≥–ª—É—à–∫–∏, —Ç–∞–∫ –∫–∞–∫ –∑–≤—É–∫–∏ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã)
    function playSpinSound() {
        // –ó–≤—É–∫ –≤—Ä–∞—â–µ–Ω–∏—è –±–∞—Ä–∞–±–∞–Ω–æ–≤
        console.log('Playing spin sound');
    }
    
    function playStopSound() {
        // –ó–≤—É–∫ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–∞—Ä–∞–±–∞–Ω–∞
        console.log('Playing stop sound');
    }
    
    function playWinSound(amount) {
        // –ó–≤—É–∫ –≤—ã–∏–≥—Ä—ã—à–∞ (—Ä–∞–∑–Ω—ã–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—É–º–º—ã)
        if (amount >= 500) {
            console.log('Playing big win sound');
        } else {
            console.log('Playing win sound');
        }
    }
    
    function playLoseSound() {
        // –ó–≤—É–∫ –ø—Ä–æ–∏–≥—Ä—ã—à–∞
        console.log('Playing lose sound');
    }
    
    function playButtonSound() {
        // –ó–≤—É–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
        console.log('Playing button sound');
    }
});